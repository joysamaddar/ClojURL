(ns app.core (:require [helix.core :refer [defnc $]]
                       [helix.hooks :as hooks]
                       [helix.dom :as d]
                       [promesa.core :as p]
                       ["react-dom/client" :as rdom]))

(defnc app []
  (let [[state set-state] (hooks/use-state {:slug nil :url ""})
        
        fetch-slug (fn []
                     (p/let [_response (js/fetch "/api/shorten" (clj->js {:headers {:Content-Type "application/json"} :method "POST" :body (js/JSON.stringify #js {:url (:url state)})}))
                             response (.json _response)
                             data (js->clj response :keywordize-keys true)]
                       (set-state assoc :slug (-> data :data :slug))))
        
        origin-link (.. js/location -href)
        ]
    
    
    ;; DOM ELEMENTS
    
    (d/div {:class-name "bg-blue-50 grid place-items-center h-screen"}
       (d/div (d/input {:value (:url state)
                        :on-change #(set-state assoc :url (.. % -target -value))
                        :class-name "bg-blue-50 form-control border border-solid py-2 px-4"
                        :placeholder "Enter URL!"})
              (d/button {:on-click #(fetch-slug) :class-name "border-2  py-2 px-4 uppercase"} "Shorten")
              ,
              )
      (d/div (d/a {:href (str  origin-link (:slug state))} (str origin-link (:slug state))))
     
     )
    
    
    
   ))

(defn ^:export init []
  (let [root (rdom/createRoot (js/document.getElementById "app"))]
    (.render root ($ app))))

